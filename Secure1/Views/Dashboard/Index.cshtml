@*No @model here because viewmodel is built in linq EF parts; there is no hand crafted viewmodel*@
@{
	ViewData["Title"] = "Dashboard";
}

<div class="row" style="padding: 5px 3px 4px 3px; border-radius: 8px;">
	<div style="padding: 4px 4px 4px 4px; max-width: 600px; background-color:lavender; border: 1px solid grey; border-radius: 8px;">
		<table>
			<thead></thead>
			<tbody>
				<tr>
					<td colspan="2" style="padding: 4px 3px 4px 3px;">
						<b>USER:</b> @Model.FirstName @Model.LastName
					</td>
				</tr>
				<tr>
					<td style="padding: 4px 3px 4px 3px;">
						<b>ORGINAZATION:</b> @Model.OrganizationNavigation.OrgName
					</td>
					<td style="padding: 4px 3px 4px 3px;">
						<b>CREATED:</b> @Model.OrganizationNavigation.CreateDate
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</div>
<div class="row" style="padding: 5px 3px 4px 3px; ">
	<div class="col-lg-12 col-md-12 col-sm-12" style="padding: 4px 4px 4px 4px; background-color:lightgoldenrodyellow; border: 1px solid grey; border-radius: 8px;">
		<table>
			<thead></thead>
			<tbody>
				<tr>
					<td colspan="4" style="padding: 4px 3px 4px 3px; align-content:center; vertical-align:top;">
						<b>PROJECTS</b>
					</td>
				</tr>
				@foreach (var project in Model.Project) {
					<tr>
						<td style="padding: 4px 3px 4px 3px; width: 5%;">
							<b>ID: </b>@project.Id
						</td>
						<td style="padding: 4px 3px 4px 3px; width: 60%;">
							<b>DESCRIPTION: </b>@project.Desc
						</td>
						<td style="padding: 4px 3px 4px 3px; width: 15%;">
							<b>TYPE: </b>@project.Type
						</td>
						<td style="padding: 4px 3px 4px 3px; width: 20%; text-align:right;">
							<b>CREATED: </b>@project.CreateDate
						</td>
						<td></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>
<div class="row">
	<div class="col-lg-6" style="margin: 4px 4px 4px 4px; padding: 4px 4px 4px 4px; background-color:lightgoldenrodyellow; border: 1px solid grey; border-radius: 8px;">
		<table>
			<thead></thead>
			<tbody>
				<tr>
					<td colspan="4" style="padding: 4px 3px 4px 3px; align-content:center; vertical-align:top;">
						<b>PROJECT THINGS</b>
					</td>
				</tr>
				@foreach (var project in Model.Project) {
					@foreach (var thing in project.Thing) {
						<tr>
							<td style="padding: 4px 3px 4px 3px;">
								<b>ID: </b>@thing.Id
							</td>
							<td style="padding: 4px 3px 4px 3px;">
								<b>NAME: </b>@thing.Name
							</td>
							<td style="padding: 4px 3px 4px 3px;">
								<b>TYPE: </b>@thing.Type
							</td>
							<td style="padding: 4px 3px 4px 3px;">
								<b>CREATED: </b>@thing.CreateDate
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
	<div class="col-lg-6" style="margin: 4px 4px 4px 4px; padding: 4px 4px 4px 4px; background-color:lightgoldenrodyellow; border: 1px solid grey; border-radius: 8px;">
		<table>
			<thead></thead>
			<tbody>
				<tr>
					<td colspan="4" style="padding: 4px 3px 4px 3px; align-content:center; vertical-align:top;">
						<b>THING VERSIONS</b>
					</td>
				</tr>
				@foreach (var project in Model.Project) {
					@foreach (var thing in project.Thing) {
						@foreach (var version in thing.Version) {
							<tr>
								<td style="padding: 4px 3px 4px 3px; width: 10%;">
									<b>THING: </b>@version.Thing
								</td>
								<td style="padding: 4px 3px 4px 3px; width: 10%;">
									<b>ID: </b>@version.Id
								</td>
								<td style="padding: 4px 3px 4px 3px; width: 30%;">
									<b>NAME: </b>@version.Name
								</td>
								<td style="padding: 4px 3px 4px 3px; width: 20%;">
									<b>TYPE: </b>@version.FileType
								</td>
								<td style="padding: 4px 3px 4px 3px; width: 30%; text-align:right;">
									<b>CREATED: </b>@version.CreateDate
								</td>
								<td></td>
							</tr>
						}
					}
				}
			</tbody>
		</table>
	</div>
</div>
<div>
	<br />
	<button data-bind="click: doOne">Something</button>
	<br />
	<span data-bind="text: serverData().Project()[0].Desc()"></span>
	<br />
</div>
@section Scripts {
	<script src="~/js/site.js"></script>
	<script src="~/lib/knockout/dist/knockout.mapping.js"></script>
	<script>
		function koMapModel() {
			var self = this;
			self.serverData = ko.observable('mod1');

			self.serverData(ko.mapping.fromJS(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model))));

			self.doOne = function () {
				var x = 1;

			}
		}

		ko.applyBindings(new koMapModel());
	</script>

	@await Html.PartialAsync("_ValidationScriptsPartial")

}