@*No @model here because viewmodel is built in linq EF parts; there is no hand crafted viewmodel*@
@{
	ViewData["Title"] = "Dashboard";
}

<div class="col-lg-12">
	<div class="row" style="padding: 5px 3px 4px 3px; border-radius: 8px; margin-bottom:10px;">
		<div style="padding: 4px 4px 4px 4px; max-width: 600px; background-color:#dfdbff; border: 1px solid grey; border-radius: 8px;">
			<table>
				<thead></thead>
				<tbody>
					<tr>
						<td colspan="2" style="padding: 4px 3px 4px 3px;">
							<b>USER:</b> @Model.FirstName @Model.LastName
						</td>
					</tr>
					<tr>
						<td style="padding: 4px 3px 4px 3px;">
							<b>ORGINAZATION:</b> @Model.OrganizationNavigation.OrgName
						</td>
						<td style="padding: 4px 3px 4px 3px;">
							<b>CREATED:</b> @Model.OrganizationNavigation.CreateDate
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	<div class="container-fluid">
		<div class="row">
			<div class="col-sm-4">
				<div class="card card-style">
					<div class="card-header card-header-style">
						<label class="switch" title="Show or Hide Deactive">
							<input type="checkbox">
							<span class="slider round"></span>
						</label>
						<span class="checkbox-sm-label">Show Deactive</span>
						<button class="myButton-sm" title="Add a Project">Add</button>
					</div>
					<div class="card-block">
						<div class="card-text card-text-style">
							<table style="width: 100%;">
								<thead>
									<tr>
										<th class="th-title-style" colspan="2">User's Projects</th>
									</tr>
								</thead>
								<tbody data-bind="foreach: serverData().Project()">
									<tr class="tr-inner-table-bottom-style" title="Select a Project to view it's Items" data-bind="click: function() { $root.selectProject($data) }, css: { 'selected': $root.SelectedProj() == $data } ">
										<td>
											<div style="width: 100%;">
												<table style="width: 100%;">
													<tbody>
														<tr>
															<td class="td-left-card-style">
																<b>Name: </b>TempNull
															</td>
															<td class="td-center-card-style">
																<b>Created: </b><span data-bind="text: $data.CreateDate()"></span>
															</td>
														</tr>
														<tr>
															<td class="td-left-card-style">
																<b>Type: </b><span data-bind="text: $data.Type()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Industry: </b><span data-bind="text: $data.Industry()"></span>
															</td>
														</tr>
														<tr>
															<td class="td-left-card-style">
																<b>Desc: </b><span data-bind="text: $data.Desc()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Comment: </b><span data-bind="text: $data.Comment()"></span>
															</td>
														</tr>
													</tbody>
												</table>
											</div>
										</td>
										<td class="td-right-card-style"><a class="a-small">Deactivate</a></td>
									</tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-4">
				<div class="card card-style">
					<div class="card-header card-header-style">
						<label class="switch" title="Show or Hide Deactive">
							<input type="checkbox">
							<span class="slider round"></span>
						</label>
						<span class="checkbox-sm-label">Show Deactive</span>
						<button class="myButton-sm" title="Add a Project">Add</button>
					</div>
					<div class="card-block">
						<div class="card-text card-text-style">

							<strong class="card-title" data-bind="ifnot: SelectedProj">No Project is selected</strong>
							<table data-bind="visible: SelectedProj" style="width: 100%;">
								<thead>
									<tr>
										<th class="th-title-style" colspan="2">Project's Items</th>
									</tr>
								</thead>
								<tbody data-bind="foreach: things()">
									<tr class="tr-inner-table-bottom-style" title="Select Item to view it's Versions" data-bind="click: function() { $root.selectThing($data) }, css: { 'selected': $root.SelectedThing() == $data } ">

										<td>
											<div style="width: 100%;">
												<table style="width: 100%;">
													<tbody>
														<tr>
															<td class="td-left-card-style">
																<b>Name: </b><span data-bind="text: $data.Name()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Created: </b><span data-bind="text: $data.CreateDate()"></span>
															</td>
														</tr>
														<tr>
															<td class="td-left-card-style">
																<b>Type: </b><span data-bind="text: $data.Type()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Focus: </b><span data-bind="text: $data.Focus()"></span>
															</td>
														</tr>
														<tr>
															<td class="td-left-card-style">
																<b>Desc: </b><span data-bind="text: $data.Desc()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Comment: </b><span data-bind="text: $data.Comment()"></span>
															</td>
														</tr>
													</tbody>
												</table>
											</div>
										</td>
										<td class="td-right-card-style"><a class="a-small">Deactivate</a></td>
									</tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-4">
				<div class="card card-style">
					<div class="card-header card-header-style">
						<label class="switch" title="Show or Hide Deactive">
							<input type="checkbox">
							<span class="slider round"></span>
						</label>
						<span class="checkbox-sm-label">Show Deactive</span>
						<button class="myButton-sm" title="Add a Project">Add</button>
					</div>
					<div class="card-block">
						<div class="card-text card-text-style">

							<strong class="card-title" data-bind="ifnot: SelectedThing">No Thing is selected</strong>
							<table data-bind="visible: SelectedThing" style="width: 100%;">
								<thead>
									<tr>
										<th class="th-title-style" colspan="2">Item's Versions</th>
									</tr>
								</thead>
								<tbody data-bind="foreach: versions()">
									<tr class="tr-inner-table-items-bottom-style">
										<td>
											<div style="width: 100%;">
												<table style="width: 100%;">
													<tbody>
														<tr>
															<td class="td-left-card-style">
																<b>Name: </b><span data-bind="text: $data.Name()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Created: </b><span data-bind="text: $data.CreateDate()"></span>
															</td>
														</tr>
														<tr>
															<td class="td-left-card-style">
																<b>File Type: </b><span data-bind="text: $data.FileType()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Size: </b><span data-bind="text: $data.Size()"></span>
															</td>
														</tr>
														<tr>
															<td class="td-left-card-style">
																<b>Desc: </b><span data-bind="text: $data.Desc()"></span>
															</td>
															<td class="td-center-card-style">
																<b>Comment: </b><span data-bind="text: $data.Comment()"></span>
															</td>
														</tr>
													</tbody>
												</table>
											</div>
										</td>
										<td class="td-right-card-style"><a class="a-small">Deactivate</a></td>

									</tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	@section Scripts {
		<script src="~/js/site.js"></script>
		<script src="~/lib/knockout/dist/knockout.mapping.js"></script>
		<script>

function koMapModel() {
	var self = this;

	self.things = ko.observable(undefined);
	self.versions = ko.observable(undefined);
	self.SelectedProj = ko.observable(undefined);
	self.SelectedThing = ko.observable(undefined);

		self.serverData = ko.observable(ko.mapping.fromJS(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model))));

	self.selectProject = function (Proj) {
		self.SelectedProj(Proj);
		self.things(Proj.Thing);
		self.SelectedThing(undefined);
	};

	self.selectThing = function (Thing) {
		self.SelectedThing(Thing);
		self.versions(Thing.Version);
	};
}
ko.applyBindings(new koMapModel());

		</script>

		@await Html.PartialAsync("_ValidationScriptsPartial")
	}
